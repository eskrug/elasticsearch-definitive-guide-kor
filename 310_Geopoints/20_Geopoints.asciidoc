[[geopoints]]
== Geo-Points

_geo-point_ 는 지구표면 위에 한 지점의 위도/경도 를 나타낸다. ((("geo-points"))) Geo-points 는 한 지점으로 부터 거리를 계산하기 위해 사용이 가능한데, 경계범위 위치의 안에 있는지 확인하거나, 그 수치를 집계할 때 사용할 수 있다.

Geo-points 는 <<dynamic-mapping,dynamic mapping>> 을 통해서 자동으로 검출(mapping) 되지 않는다. ((("dynamic mapping", "geo-points and"))) 대신, mapping 을 이용하여 type 을 `geo_point` 필드로 ((("mapping (types)", "geo-points"))) 명시적으로 지정을 해주어야 한다:


[source,json]
-----------------------
PUT /attractions
{
  "mappings": {
    "restaurant": {
      "properties": {
        "name": {
          "type": "string"
        },
        "location": {
          "type": "geo_point"
        }
      }
    }
  }
}
-----------------------

[[lat-lon-formats]]
[float="true"]
=== Lat/Lon Formats

`geo_point` 로 정의되어진 `location` 필드는 ((("geo-points", "location fields defined as, lat/lon formats")))((("location field, defined as geo-point")))((("latitude/longitude pairs", "lat/lon formats for geo-points")))((("arrays", "geo-point, lon/lat format")))((("strings", "geo-point, lat/lon format")))((("objects", "geo-point, lat/lon format"))), 인덱스 도큐먼트 안에 strings, arrays, object 형태로 위도/경도 정보를 포함시킬 수 있다.

[role="pagebreak-before"]
[source,json]
-----------------------
PUT /attractions/restaurant/1
{
  "name":     "Chipotle Mexican Grill",
  "location": "40.715, -74.011" <1>
}

PUT /attractions/restaurant/2
{
  "name":     "Pala Pizza",
  "location": { <2>
    "lat":     40.722,
    "lon":    -73.989
  }
}

PUT /attractions/restaurant/3
{
  "name":     "Mini Munchies Pizza",
  "location": [ -73.983, 40.719 ] <3>
}
-----------------------
<1> String 형태일때 표현방법 `"lat,lon"`  "위도,경도" 순서로 정의 합니다.
<2> Object 형태일때 표현방법 `lat` 과 `lon` 으로 명시적으로 이름을 설정합니다. 
<3> Array 형태일때 표현방법 `[lon,lat]`.  [경도,위도] 순서로 정의 합니다.

[CAUTION]
========================
누구든 한번 쯤 발생하게되는 문제:
  String 에서 geo-points 는 `"latitude,longitude"` 위도,경도 순서로 기록하고,
  Array 에서 geo-point 는 `[longitude,latitude]` 경도,위도 순서로 기록합니다.
  &#x2014;순서가 반대인 것에 주의하세요. 

원래 Elasticsearch 에서는 위도,경도 순서로 사용을 합니다.
그러나 Array 에서는 GeoJSON 에서 초기에 결정된 정의대로 경도,위도 순서를 따릅니다.

이 결과로 위치 정보를 사용하는 모든 사용자들이 함정에 빠집니다.   

========================

